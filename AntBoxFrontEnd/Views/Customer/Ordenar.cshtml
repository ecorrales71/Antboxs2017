@model AntBoxFrontEnd.Models.OrderViewModel

@{
    ViewBag.Title = "Index";

}

            <!-- WRAPPER -->
            <div class="wrapper">
                <!-- CONTENT -->
                <div class="content ordenar">
                    <!-- CONTAINER -->
                    <div class="container">
                        <div class="row irow-xs">
                            <div class="col-sm-12">
                                <h1>Ordenar</h1>
                                <div class="heading-divider"></div>
                            </div>
                        </div>
                    </div>
                    <!-- /.container -->
                    <!-- CONTAINER -->
                    <div class="container mt30">
                        <div class="row">
                            <div class="col-md-3 pr0 no_portrait">
                                @Html.Partial("_LeftMenu")
                            </div>
                            <div class="col-md-9">
                                <form class="form-solid" id="form-ordenar">
                                    <div class="row">
                                        <div class="col-sm-9">
                                            <div class="irow-xs pb30">
                                                <h3>Ordena tus antboxs</h3>
                                                <p>Ordenar tus antboxs es muy sencillo, solo indícanos cuántas antboxs necesitas y a qué direcciones debemos enviártelas.</p>
                                            </div>
                                            <div class="highlight highlight-light pl30 pr30 pb40 mb20">
                                                <div class="container">
                                                    <section class="row irow-md irow-xs">
                                                        <div class="col-lg-6 text-center mb10">
                                                            <h3>¡Solicita tus antboxs ahora!</h3>
                                                            <p>Libera y ahorra espacio en tu casa u oficina.</p>
                                                        </div>
                                                        <div class="col-lg-6 text-center">
                                                            <nav>
                                                                <a class="icon icon-inverse icon-size-2 icon-theme icon-rounded nopointer" data-hover="rubberBand">
                                                                    <i class="fa fa-archive"></i>
                                                                </a>
                                                                <a class="icon icon-inverse icon-size-3 icon-theme icon-rounded nopointer" data-hover="rubberBand">
                                                                    <i class="fa fa-archive"></i>
                                                                </a>
                                                                <a class="icon icon-inverse icon-size-2 icon-theme icon-rounded nopointer" data-hover="rubberBand">
                                                                    <i class="fa fa-archive"></i>
                                                                </a>
                                                            </nav>
                                                        </div>
                                                    </section>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-3">
                                            <div class="card card-image pt0 pb0">
                                                <figure class="figure ">
                                                    <!--Agregar a clase para slider: "slider oneslider"-->
                                                    <ul data-fx="crossfade" data-auto="true" data-timeout="4500">
                                                        <li>

                                                            <img src="@Url.Content("~/Content/Images/antboxs-caja.png")" alt="">
                                                            <div class="sticker_title tag_title mb10">antbox grande</div>
                                                        </li>
                                                    </ul>
                                                </figure>
                                            </div>
                                        </div>
                                    </div>

                                  @Html.Partial("_SelectBoxesPartial", Model.Boxes)
                                    <input type="hidden" class="ivav" value="@Model.Rules.Iva" />
                                    @foreach (var item in Model.Rules.Rules)
                                    {

                                        <ul class="rules" style="display: none;">
                                            <li class="min">@item.Min</li>
                                            <li class="max">@item.Max</li>
                                            <li class="discount">@item.Discount</li>
                                        </ul>
                                    }
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <hr class="hr-dashed mt0 mb40" />
                                        </div>
                                    </div>
                                    <div class="row mt10">
                                        <div class="col-sm-12">
                                            <div class="irow-xs">
                                                <h3>Dirección de recolección</h3>
                                                <p>¿Dónde y cuándo debemos llevarte tus antboxs vacías?</p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row mt20">
                                        <div class="col-sm-6">
                                            <div class="form-group mb0">
                                                <label for="form-select">* Dirección de recolección</label>
                                                <select id="AddressPickup" name="addresspickup">
                                                    @if (Model.Addresses != null)
                                                    {
                                                        foreach (var item in Model.Addresses)
                                                        {
                                                            if (item != null)
                                                            {
                                                                <option value='@item.Id.ToString()'> @item.Alias</option>
                                                            }
                                                        }
                                                    }
                                                    @*<option value>- Selecciona una opción -</option>
                                                    <option value="Casa">Casa</option>
                                                    <option value="Oficina">Oficina</option>
                                                    <option value="Facturación">Facturación</option>*@
                                                </select>
                                                <button type="button" class="btn btn-primary btn-xs pull-right" data-toggle="modal" data-target="#nueva_direccion">Nueva dirección</button>
                                            </div>
                                            <label for="textbox">* Fecha</label>
                                            <div class="input-group" >
                                                <span class="input-group-btn">
                                                    <button type="button" id="recoleccion" class="btn btn-primary pull-right"><i class="fa fa-calendar"></i></button>
                                                </span>                                   
                                                <input class="form-control" type="text" id="fecha_recoleccion" name="fecha_recoleccion" disabled="disable" required="requerid">
                                                <br />
                                            </div>
                                            <div style='display:none' id="alert_fecha" class="help-block"><label>La fecha debe ser superior a la actual*</label></div>
                                            <div class="form-group">
                                                @Html.HiddenFor(m => m.HoraRecoleccionString)
                                                <input type="hidden" name="fromr" id="datafromr" value="" />
                                                <input type="hidden" name="tor" id="datator" value=" " />
                                                <label for="form-select">* Horario de recolección</label>
                                                @Html.DropDownListFor(m => m.WorkerIdPickup, new List<SelectListItem> { new SelectListItem { Value = "", Text = "Selecciona una fecha" } }, "", new { @id = "Horario_recoleccion" , onchange = "HorarioRecoleccion()" })
                                                @*<select id="Horario_recoleccion" required="requerid">
                                                        <option value>- Selecciona una opción -</option>
                                                        <option value="09-11">09:00 - 11:00 hrs.</option>
                                                        <option value="11-13">11:00 - 13:00 hrs.</option>
                                                        <option value="13-15">13:00 - 15:00 hrs.</option>
                                                        <option value="15-17">15:00 - 17:00 hrs.</option>
                                                        <option value="17-19">17:00 - 19:00 hrs.</option>
                                                    </select>*@
                                            </div>
                                            <div style='display:none' id="alert_horario" class="help-block"><label>No hay trabajadores disponibles para este horario*</label></div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label for="form-message">Referencias o comentarios</label>
                                                <textarea name="message" id="txtReferenciaRecoleccion"></textarea>
                                            </div>
                                            <div class="checkbox">
                                                <label>
                                                    @*@Html.EditorFor(m => m.Service_time_Pickup)*@
                                                    <input type="checkbox" name="chkEsperar" id="chkEsperar" class="chkEsperar">
                                                    Requiero que la recolección de mis antboxs sea otro día.
                                                </label>
                                                <p class="firstm depositomensaje" style="display: none; text-align: left; font-size: 14px !important; color: #666 !important; margin-left: 21px; line-height: 20px;">
                                                    Estoy de acuerdo que se me cargará un depósito por cada antboxs y que me será devuelto en cuanto la(s) recolecten.
                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <hr class="hr-dashed mt0 mb40" />
                                        </div>
                                    </div>
                                    <div class="direccion-entrega" style="display:none;">
                                        <div class="row mt10">
                                            <div class="col-sm-12">
                                                <div class="irow-xs">
                                                    <h3>¿Dónde y cuándo debemos recoger antboxs?</h3>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row mt20">
                                            <div class="col-sm-6">
                                                <div class="form-group mb0">
                                                    <label for="form-select">* Dirección de entrega</label>
                                                    <select id="AddressDelivery">
                                                        @if (Model.Addresses != null)
                                                        {
                                                            foreach (var item in Model.Addresses)
                                                            {
                                                                if (item != null)
                                                                {
                                                                    <option value='@item.Id.ToString()'> @item.Alias</option>
                                                                }
                                                            }
                                                        }

                                                    </select>
                                                    <button type="button" class="btn btn-primary btn-xs pull-right direccion2" data-toggle="modal" data-target="#nueva_direccion">Nueva dirección</button>
                                                </div>
                                                <label for="textbox">* Fecha</label>
                                                <div class="input-group">
                                                    <span class="input-group-btn">
                                                        <button type="button" id="entrega" class="btn btn-primary pull-right"><i class="fa fa-calendar"></i></button>
                                                    </span>
                                                    <input class="form-control" type="text" id="fecha_entrega" name="fecha_entrega" disabled="disable" required="requerid">
                                                    <br />
                                                </div>
                                                <div style='display:none' id="alert_fechaentrega" class="help-block"><label>La fecha debe ser superior a la actual*</label></div>
                                                <div class="form-group">
                                                    @Html.HiddenFor(m => m.HoraEntregaString)
                                                    <input type="hidden" name="frome" id="datafrome" value="" />
                                                    <input type="hidden" name="toe" id="datatoe" value=" " />
                                                    <label for="form-select">* Horario de entrega</label>
                                                    @Html.DropDownListFor(m => m.WorkerIdPickup, new List<SelectListItem> { new SelectListItem { Value = "", Text = "Selecciona una fecha" } }, "", new { @id = "Horario_entrega", onchange = "HorarioEntrega()" })

                                                </div>
                                                <div style='display:none' id="alert_horarioentrega" class="help-block"><label>No hay trabajadores disponibles para este horario*</label></div>
                                            </div>
                                            <div class="col-sm-6">
                                                <div class="form-group">
                                                    <label for="form-message">Referencias o comentarios</label>
                                                    <textarea name="message" id="txtReferenciaEntrega"></textarea>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-12">
                                                <hr class="hr-dashed mt0 mb40" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row mt10">
                                        <div class="col-sm-6">
                                            <div class="irow-xs">
                                                <h3>Formas de Pago</h3>
                                                <p>Selecciona tu forma de pago.</p>
                                            </div>
                                            <div class="form-group mt20">
                                                <label for="form-select">Forma de pago</label>
                                                <input type="hidden" name="cardscount" id="cardscount" value="@Model.Cards.Count" />
                                                <select id="CardsList">
                                                    @foreach (var card in Model.Cards)
                                                    {
                                                        if (card.State != "main")
                                                        {
                                                            <option value='@card.Id'>@card.Info.Card_number</option>
                                                        }
                                                        else
                                                        {
                                                            <option value='@card.Id' selected>@card.Info.Card_number</option>
                                                        }
                                                    }

                                                    @*<option value>- Selecciona una opción -</option>
                                                    <option value="tarjeta_1">Tarjeta 1</option>
                                                    <option value="tarjeta_2">Tarjeta 2</option>
                                                    <option value="tarjeta_3">Tarjeta 3</option>*@
                                                </select>
                                                <button type="button" class="btn btn-primary btn-xs pull-right" data-toggle="modal" data-target="#nueva_tarjeta">Nueva tarjeta</button>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="irow-xs">
                                                <h3>Preferencia de contacto</h3>
                                                <p>Elige la forma de contacto más adecuada para ti.</p>
                                            </div>
                                            <div class="row">
                                                <div class="col-sm-6">
                                                    <div class="checkbox">
                                                        <label>
                                                            @*@Html.EditorFor(m => m.ContactByTel)*@
                                                            <input type="checkbox" name="preferencia_contacto_Tel" checked>
                                                            Teléfono
                                                        </label>
                                                    </div>
                                                </div>
                                                <div class="col-sm-6">
                                                    <div class="checkbox">
                                                        <label>
                                                            @*@Html.EditorFor(m => m.ContactByEmail)*@
                                                            <input type="checkbox" name="preferencia_contacto_mail" checked>
                                                            E-mail
                                                        </label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <hr class="hr-dashed mt0 mb40" />
                                        </div>
                                    </div>
                                    <div class="row mt10 legales">
                                        <div class="col-sm-6 pl10_pr10_mobiles">
                                            <div class="irow-xs">
                                                <h3>Restricciones de uso</h3>
                                                <p>Revisa las condiciones de uso antes de continuar.</p>
                                            </div>
                                            <div class="checkbox">
                                                <button type="button" class="btn-link" data-toggle="modal" data-target="#restricciones_uso">restricciones de uso</button>

                                                <label class="pull-left pr5">
                                                    <input type="checkbox" name="chkRestricciones" id="chkRestricciones" required="required">
                                                    Entiendo y acepto las
                                                </label>
                                            </div>
                                        </div>
                                        <div class="col-sm-6 pl10_pr10_mobiles">
                                            <div class="irow-xs">
                                                <h3>Términos y condiciones</h3>
                                                <p>Revisa los términos y condiciones antes de continuar.</p>
                                            </div>
                                            <div class="checkbox">
                                                <a href="/Content/docs/terminos-y-condiciones.pdf" target="_blank" class="btn-link">
                                                    <b>términos y condiciones</b>
                                                </a>
                                                <label class="pull-left pr5">
                                                    <input type="checkbox" name="chkCondiciones" id="chkCondiciones" required="required">
                                                    Entiendo y acepto los
                                                </label>
                                            </div>
                                        </div>
                                        <div class="row mr0">
                                            <div class="col-sm-12 mt30">
                                                <input type="button" id="completarOrden" class="btn btn-primary btn-wide pull-right mt10" value="Completar mi orden" onclick="CompletarOrden()" >

                                                <p class="succs-msg">Мensaje enviado</p>
                                            </div>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                    <!-- /.container -->
                </div>
                <!-- /.content -->
                <?php include 'includes/promobox.php';?>

            </div>
            <!-- /.wrapper -->
            <!-- Modal Medium -->
        <div class="modal fade" id="nueva_direccion">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times"></i></button>
                <h6 class="modal-title">Registrar nueva dirección</h6>
            </div>
            <div class="modal-body">
                <form action="" method="post" class="contact-form form-solid" novalidate id="form-address">

                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="send-form-email">Alias</label>
                                <input type="text" name="Alias" value="" id="Alias" />
                            </div>
                            <div class="form-group">
                                <label for="send-form-email">* Calle</label>
                                <input type="text" name="Street" value="" id="Street" />
                            </div>
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="send-form-email">* Núm. Ext.</label>
                                        <input type="text" name="External_number" value="" id="External_number1" />
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="send-form-email">Núm. Int</label>
                                        <input type="text" name="Internal_number" value="" id="Internal_number" />
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="send-form-email">* Código Postal</label>
                                @*<input type="text" name="email" id="txtZipcode1">*@
                                <input type="text" name="Zipcode" value="" id="txtZipcode1" onkeyup="search_code(this.value)" />
                            </div>
                            <div id="zipCodeError"></div>
                            <div class="form-group">
                                <label for="form-select">* Delegación o Municipio</label>
                                <select name="Delegation" id="cmbDelegations1">
                                    <option value>Selecciona una opción</option>
                                    <option value>Captura el código postal</option>
                                </select>
                                @*<select id="delegation">
                            <option value="">- Selecciona una opción -</option>
                        </select>*@
                            </div>
                            <div class="form-group">
                                <label for="form-select">* Colonia</label>
                                <select name="Neighborhood" id="cmbNeighborhood1">
                                    <option value>Selecciona una opción</option>
                                    <option value>Captura el código postal</option>
                                </select>
                                @*<select id="neighborhood" name="form_select">
                            <option value="">- Selecciona una opción -</option>
                        </select>*@
                            </div>
                        </div>
                        <div class="col-sm-6 pl0_modal">
                            <div class="form-group">
                                <label for="send-form-email">* Ciudad</label>
                                <input type="text" name="City" value="" id="City" />
                            </div>
                            <div class="form-group">
                                <label for="send-form-email">* Estado</label>
                                <input type="text" name="State" value="" id="State" />
                            </div>
                            <div class="form-group">
                                <label for="send-form-email">* País</label>
                                <input type="text" name="Country" value="" id="Country" />
                            </div>

                        </div>
                        <div class="col-sm-12 mt10">
                            <input type="button" class="btn btn-primary btn-wide pull-right" id="btnCreateAddress" value="Registrar">
                            <p class="succs-msg">Мensaje enviado</p>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- /.modal -->
<!-- Modal Medium -->
<div class="modal fade" id="nueva_tarjeta">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times"></i></button>
                <h6 class="modal-title">Registrar nueva tarjeta</h6>
            </div>
            <div class="modal-body">
                <div id="newCardResult"></div>
                <form action="" method="post" class="contact-form form-solid form-card" novalidate>
                    <div class="row mt20">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="send-form-name">* Nombre de Tarjeta</label>
                                <input type="text" name="name" id="card-holder-name">
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="send-form-email">* Número de Tarjeta</label>
                                <input type="text" name="numero" id="card-number">
                            </div>
                        </div>
                    </div>
                    <p class="mb0 etiqueta">Expiración:</p>
                    <div class="row">
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label for="send-form-email">* MM</label>
                                <input type="text" name="mm" id="card-exp-month">
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label for="send-form-email">* YY</label>
                                <input type="text" name="yy" id="card-exp-year">
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label for="send-form-email">* CVC</label>
                                <input type="text" name="cvv" id="card-cvv">
                            </div>
                        </div>
                    </div>
                    <div class="row ml0 mr0 mt10">
                        <input type="button" class="btn btn-primary btn-wide pull-right" value="Registrar" onclick="generate_token()">
                        <p class="succs-msg">Мensaje enviado</p>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- /.modal -->
<!-- Modal Medium -->
<div class="modal fade" id="restricciones_uso">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times"></i></button>
                <h6 class="modal-title">Restricciones de uso</h6>
            </div>
            <div class="modal-body">
                <div class="modal-body-inside restricciones-content">
                    <h4>Respeta las siguientes condiciones de uso:</h4>
                    <div class="heading-divider"></div>
                    <p></p>
                    <ul>
                        <li><i class="fa fa-check fa-fw text-success"></i>Los artículos caben adecuadamente en mis antboxs.</li>
                        <li><i class="fa fa-check fa-fw text-success"></i>No estoy guardando artículos prohibidos dentro de mis antboxs (Mayor detalle en <a href="/Content/docs/terminos-y-condiciones.pdf" target="_blank" class="link_red">Términos y Condiciones</a>).</li>
                        <li><i class="fa fa-check fa-fw text-success"></i>Estoy informado y autorizo que se cargue un costo mensual por cada antboxs a mi tarjeta de crédito.</li>
                        <li><i class="fa fa-check fa-fw text-success"></i>Entiendo y autorizo que tengo derecho a un envío al mes gratuito, de mis antboxs a mi domicilio registrado, los adicionales tienen costo.</li>
                        <li><i class="fa fa-check fa-fw text-success"></i>Llevo un registro personal de mis artículos en cada antboxs.</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- /.modal -->
<!-- Modal Large -->
<div class="modal fade" id="terminos_condiciones">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times"></i></button>
                <h6 class="modal-title">Términos y condiciones</h6>
            </div>
            <div class="modal-body">
                <div class="modal-body-inside">
                    <h4>Términos y condiciones</h4>
                    <div class="heading-divider"></div>
                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {

   
    <!-- /.modal -->
    <script type="text/javascript">
        function colocaChosen() {
            $(".chosen-container").each(function () {
                $(this).insertBefore($(this).closest(".form-group").find("select"));
            })
        }
        var discount = 0;
        Calendar.setup({
            inputField: "fecha_recoleccion",      // id del campo de texto
            ifFormat: "%Y-%m-%d",       // formato de la fecha, cuando se escriba en el campo de texto
            button: "recoleccion" ,  // el id del botón que lanzará el calendario
            onUpdate: function() {
                var date = $("#fecha_recoleccion").val();
                var f = new Date();
                var month = f.getMonth() + 1
                month = (parseInt(month) < 10) ? "0" + month : month;
                var day = (parseInt(f.getDate()) < 10) ? "0" + f.getDate() : f.getDate();
                var fecha_hoy = f.getFullYear() + "-" + month + "-" + day;
                
                if (date <= fecha_hoy) {
                    document.getElementById('alert_fecha').style.display = 'block';
                    $('#fecha_recoleccion').css('background', '#ffdede');
                    //alert("La fecha no puede ser menor a la fecha de hoy");
                    $('#fecha_recoleccion').attr('value') = '';
                } else {
                    document.getElementById('alert_fecha').style.display = 'none';
                    $('#fecha_recoleccion').css('background', '');
                    if ($("#fecha_recoleccion").val() != "") {
                        $("#fecha_recoleccion").closest(".form-group").removeClass("has-error");
                        $("#fecha_recoleccion").closest(".form-group").find(".help-block").remove();
                    }
                    showLoad(1);
                    $.ajax({
                        url: '@Url.Action("getSchedules", "Customer")',
                        type: "GET",
                        data: { "date": date },
                        success: function (schedules) {
                                // alert("<option value='" + schedules[0].worker + "'>" + schedules[0].Start + " - " + schedules[0].End + " hrs.</option>");
                                $("#Horario_recoleccion").html("");
                                var items = '<option>Seleccciona un horario disponible</option>';
                                for (var i = 0; i < schedules.length ; i++) {
                                    items += "<option value='" + schedules[i].worker + "' data-from='" + schedules[i].From + "' data-to='" + schedules[i].To + "'>" + schedules[i].Start + " - " + schedules[i].End + " hrs.</option>";
                                }
                                document.getElementById('alert_horario').style.display = 'none';
                                $('#Horario_recoleccion').html(items);
                                $('#Horario_recoleccion').trigger("chosen:updated");
                        }, complete: function () {
                            showLoad(0);
                        }

                    });
                }
            }
        });
        Calendar.setup({
            inputField: "fecha_entrega",      // id del campo de texto
            ifFormat: "%Y-%m-%d",       // formato de la fecha, cuando se escriba en el campo de texto
            button: "entrega",  // el id del botón que lanzará el calendario
            onUpdate: function () {
                var date = $("#fecha_entrega").val();
                var f = new Date();
                var month = f.getMonth() + 1
                month = (parseInt(month) < 10) ? "0" + month : month;
                var day = (parseInt(f.getDate()) < 10) ? "0" + f.getDate() : f.getDate();
                var fecha_hoy = f.getFullYear() + "-" + month + "-" + day;

                if (date <= fecha_hoy) {
                    document.getElementById('alert_fechaentrega').style.display = 'block';
                    $('#fecha_entrega').css('background', '#ffdede');
                    //alert("La fecha no puede ser menor a la fecha de hoy");
                    $('#fecha_entrega').attr('value') = '';
                } else {
                    document.getElementById('alert_fechaentrega').style.display = 'none';
                    $('#fecha_entrega').css('background', '');
                    if ($("#fecha_entrega").val() != "") {
                        $("#fecha_entrega").closest(".form-group").removeClass("has-error");
                        $("#fecha_entrega").closest(".form-group").find(".help-block").remove();
                    }
                    showLoad(1);
                    $.ajax({
                        url: '@Url.Action("getSchedules", "Customer")',
                        type: "GET",
                        data: { "date": date },
                        success: function (schedules) {
                            // alert("<option value='" + schedules[0].worker + "'>" + schedules[0].Start + " - " + schedules[0].End + " hrs.</option>");
                            $("#Horario_entrega").html("");
                            var items = '<option>Seleccciona un horario disponible</option>';
                            for (var i = 0; i < schedules.length ; i++) {
                                items += "<option value='" + schedules[i].worker + "' data-from='" + schedules[i].From + "' data-to='" + schedules[i].To + "'>" + schedules[i].Start + " - " + schedules[i].End + " hrs.</option>";
                            }
                            document.getElementById('alert_horarioentrega').style.display = 'none';
                            $('#Horario_entrega').html(items);
                            $('#Horario_entrega').trigger("chosen:updated");
                        }, complete: function () {
                            showLoad(0);
                        }

                    });
                }
            }
        });
        var rules = [];
        $(function () {

            $('#form-address').validate({
                rules: {
                    Street: {
                        required: true
                    },
                    "Internal_number": {
                        number: true,
                    },
                    "External_number": {
                        required: true,
                        number: true,
                    },
                    Zipcode: {
                        valueNotEquals: "",
                        required: true
                    },
                    Delegation: {
                        valueNotEquals: "",
                        required: true
                    },
                    Neighborhood: {
                        valueNotEquals: "",
                        required: true
                    },
                    "Fecha_recoleccion": {
                        required: true
                    },
                    Horario: {
                        valueNotEquals: "",
                        required: true
                    },
                    City: {
                        required: true
                    },
                    State: {
                        required: true
                    },
                    Country: {
                        required: true
                    },
                },
                highlight: function (element) {
                    $(element).closest('.form-group').addClass('has-error');
                },
                unhighlight: function (element) {
                    $(element).closest('.form-group').removeClass('has-error');
                },
                errorElement: 'span',
                errorClass: 'help-block',
                errorPlacement: function (error, element) {
                    colocaChosen();
                    if (element.parent('.input-group').length) {
                        error.insertAfter(element.parent());
                    } else {
                        error.insertAfter(element);
                    }
                }
            });

            $('.form-card').validate({
                highlight: function (element) {
                    $(element).closest('.form-group').addClass('has-error');
                },
                unhighlight: function (element) {
                    $(element).closest('.form-group').removeClass('has-error');
                },
                errorElement: 'span',
                errorClass: 'help-block',
                errorPlacement: function (error, element) {
                    if (element.parent('.input-group').length) {
                        error.insertAfter(element.parent());
                    } else {
                        error.insertAfter(element);
                    }
                }
            });

            $("#card-holder-name").rules('add', { required: true });
            $("#card-number").rules('add', { required: true, number: true, maxlength: 20 });
            $("#card-exp-month").rules('add', { required: true, number: true, maxlength: 2 });
            $("#card-exp-year").rules('add', { required: true, number: true, maxlength: 2 });
            $("#card-cvv").rules('add', { required: true, number: true, maxlength: 5 });

            $(".rules").each(function () {
                rules.push({
                    min: parseInt($(this).find(".min").text()),
                    max: ($(this).find(".max").text() == "null") ? -1 : parseInt($(this).find(".max").text()),
                    discount: parseInt($(this).find(".discount").text()),
                });
            });

            $(".rules").remove();
            $('.checkdisplay').change(function () {
                if (this.checked)
                {
                    $('.todisplay').fadeIn('slow');
                    $('.chkEsperar').prop('checked', true);
                    $('.direccion-entrega').show();
                    if ($('#deposito').is(':visible')) {
                        $('.anchorprecio').trigger('click');
                    }
                    $('.anchordeposito').hide();
                    $(".depositomensaje").show();
                }
                else
                {
                    $('.chkEsperar').prop('checked', false);
                    $('.direccion-entrega').hide();
                    $('.todisplay').fadeOut('slow');
                    $('.anchordeposito').show();
                    $(".depositomensaje").hide();
                }

            });
            $(".aplicar-cupon").click(function () {
                var couponcode = $("#coupon_code").val();
                formData = {};
                formData.version = 1;
                formData.cupon = couponcode;
                if ($(this).val() == "Quitar cupón") {
                    formData.cupon = "";
                    $("#coupon_code").val("");
                }
                showLoad(1);
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetDisccount", "Precios")',
                    // data: $('#frmNewAddress').serialize(),
                    data: formData,
                    success: function (d) {
                        showLoad(0);
                        if (d.success) {
                            if (d.verif == 1) {
                                $('#couponid').val(d.couponid);
                                $(".aplicar-cupon").val("Quitar cupón");
                                discount = d.discount;
                                recalculateTotal();
                            } else {
                                alert('Obtuviste una renta gratis');
                                $('#couponid').val(couponcode);
                                $(".aplicar-cupon").val("Quitar cupón");
                                discount = 0;
                                recalculateTotal();
                            }
                        } else {
                            alert("El cupón introducido es inválido");
                            $(".aplicar-cupon").val("Aplicar cupón");
                            discount = 0;
                            recalculateTotal();
                        }
                    }, error: function (e) {
                        showLoad(0);
                        $(".aplicar-cupon").val("Aplicar cupón");
                        discount = 0;
                        recalculateTotal();
                    }
                });

                

                

            })

            $('.chkEsperar').change(function () {
                if ($("#chkEsperar").is(':checked'))
                {
                    $('.checkdisplay').prop('checked', true);
                    $('.direccion-entrega').show();
                    $('.todisplay').fadeIn('slow');
                    if ($('#deposito').is(':visible'))
                    {
                        $('.anchorprecio').trigger('click');
                    }
                    $('.anchordeposito').hide();
                    $(".depositomensaje").show();
                } else {
                    $('.checkdisplay').prop('checked', false);
                    $('.direccion-entrega').hide();
                    $('.todisplay').fadeOut('slow');
                    $('.anchordeposito').show();
                    $(".depositomensaje").hide();
                }
            })
        })
    </script>

    <script type="text/javascript">
    function HorarioRecoleccion() {
        var date = $("#fecha_recoleccion").val();
        var horario = $("#Horario_recoleccion").val();
        var t = $("#Horario_recoleccion option:selected").text();
        $('#HoraRecoleccionString').val(t);
        $("#datafromr").val($("#Horario_recoleccion option:selected").attr('data-from'));
        $("#datator").val($("#Horario_recoleccion option:selected").attr('data-to'));

        $.ajax({
            url: '@Url.Action("getSchedules", "Customer")',
                type: "GET",
                data: { "date": date },
                success: function (schedules) {
                    for (var i = 0; i < schedules.length ; i++) {
                        var work = schedules[i].Workers;
                        if (schedules[i].Start + " - " + schedules[i].End + " hrs." == t) {
                            if (work.length == 0) {
                                document.getElementById('alert_horario').style.display = 'block';
                            } else {
                                document.getElementById('alert_horario').style.display = 'none';
                            }
                        }
                    }
                }
            });
        };
        function HorarioEntrega() {
            var date = $("#fecha_entrega").val();
            var horario = $("#Horario_entrega").val();
            var t = $("#Horario_entrega option:selected").text();
            $('#HoraEntregaString').val(t);
            $("#datafrome").val($("#Horario_entrega option:selected").attr('data-from'));
            $("#datatoe").val($("#Horario_entrega option:selected").attr('data-to'));

            $.ajax({
                url: '@Url.Action("getSchedules", "Customer")',
                type: "GET",
                data: { "date": date },
                success: function (schedules) {
                    for (var i = 0; i < schedules.length ; i++) {
                        var work = schedules[i].Workers;
                        if (schedules[i].Start + " - " + schedules[i].End + " hrs." == t) {
                            if (work.length == 0) {
                                document.getElementById('alert_horarioentrega').style.display = 'block';
                            } else {
                                document.getElementById('alert_horarioentrega').style.display = 'none';
                            }
                        }
                    }
                }
            });
        };
    </script>

    <script type="text/javascript">
        function CompletarOrden() {
            var antboxobject = devuelveboxsobject();
            if (verifantbox(antboxobject))
            {
                
                var dirRecolId = $("#AddressPickup").val();
                var dirEntId = $("#AddressDelivery").val();

                var fecRec = $("#fecha_recoleccion").val();
                var fecEnt = $("#fecha_entrega").val();
                var workerRec = jQuery("#Horario_recoleccion  option:selected").val();   //worker id de recoleccion
                var workerEnt = jQuery("#Horario_entrega  option:selected").val();   //worker id de recoleccion

                var esperar = $("#chkEsperar").is(':checked');
                esperar = !esperar;

                var fromRec = $("#datafromr").val();
                var fromEnt = $("#datafrome").val();

                var toRec = $("#datator").val();
                var toEnt = $("#datatoe").val();
                
                var horaRec = $("#HoraRecoleccionString").val();
                var horaEnt = $("#HoraEntregaString").val();
                var contactoTel = $("#preferencia_contacto_Tel").is(':checked');
                var contactoMail = $("#preferencia_contacto_mail").is(':checked');
                var referenciasRec = $("#txtReferenciaRecoleccion").val();
                var referenciasEnt = $("#txtReferenciaEntrega").val();

                var cardid = jQuery("#CardsList  option:selected").val();
                var monto = $('#Total').text();
                var couponid = $('#couponid').val();

                if ((workerRec == '') || (workerRec == 'Seleccciona un horario disponible') || (fecRec == '') || (dirRecolId == ''))
                {
                    alert('Los campos marcados con (*) son requeridos');
                    return false;
                }

                if (esperar == false)
                {
                    if ((workerEnt == '') || (workerEnt == 'Seleccciona un horario disponible') || (fecEnt == '') || (dirEntId == '')) {
                        alert('Los campos marcados con (*) son requeridos');
                        return false;
                    }
                }

                OpenPay.setId('miqwkvkewii1gqs4ifh2');
                OpenPay.setApiKey('pk_e70b7a22c6c04239b10b7be3596a1f98');
                OpenPay.setSandboxMode(true);

                var deviceSessionId = OpenPay.deviceData.setup("payment-form", "deviceIdHiddenFieldName", true);
                var deviceSessionId1 = OpenPay.deviceData.setup("payment-form", "deviceIdHiddenFieldName", true);
                
                var data =
                {
                    dirRecolId: dirRecolId,
                    dirEntId: dirEntId,
                    fecRec: fecRec,
                    fecEnt: fecEnt,
                    workerRec: workerRec,
                    workerEnt: workerEnt,
                    horaRec: horaRec,
                    horaEnt: horaEnt,
                    fromRec: fromRec,
                    fromEnt: fromEnt,
                    toRec: toRec,
                    toEnt: toEnt,
                    esperar: esperar,
                    contactoTel: contactoTel,
                    contactoMail: contactoMail,
                    referenciasRec: referenciasRec,
                    referenciasEnt: referenciasEnt,
                    cardid: cardid,
                    monto: monto,
                    boxs: antboxobject,
                    couponid: couponid,
                    device: deviceSessionId,
                    device1: deviceSessionId1
                };

                if (!$("#chkRestricciones").is(':checked') || !$("#chkCondiciones").is(':checked')) {
                    alert("Debes aceptar los terminos y condiciones antes de continuar.");
                } else {

                    showLoad(1);
                    $.ajax({
                        url: '@Url.Action("DoOrder", "Customer")',
                        type: "POST",
                        data: data,
                        success: function (data) {
                            showLoad(0);
                            if (data.success) {
                                alert(data.responseText);
                                window.location.reload(true);
                            }
                            else { alert(data.responseText); }
                        }, error: function () {
                            showLoad(0);

                        }
                    });
                }
            }
            

        }

        function verifantbox(antboxobject) {
            if (antboxobject.length == 0)
            {
                alert("Debe seleccionar al menos un antbox para procesar la orden");
                return false;
            } else {
                var verifboxs = false;
                for (var i = 0; i < antboxobject.length; i++)
                {
                    if (antboxobject[i].quantity > 0)
                    {
                        verifboxs = true;
                    }
                }
                if (!verifboxs)
                {
                    alert("Debe seleccionar al menos un antbox para procesar la orden");
                }
                return verifboxs;
            }
        }
            
        function devuelveboxsobject() {
            var boxsobject = [];
            boxs.forEach(function(element, index, array) {
                boxsobject.push({ boxid: index, quantity: boxs[i].element })
            })
            for (var k in boxs) {
                if (boxs.hasOwnProperty(k)) {
                    boxsobject.push({ boxid: k, quantity: boxs[k] })
                }
            }
            return boxsobject;
        }
            
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('[data-toggle="popover"]').popover({ html: true });

            $(".amount").each(function () {
                $(this).text($(this).text().replace(",", "."));
            });
        });
    </script>

    <script type="text/javascript">
        // Script para el campo de colonia
        function showOtraColonia3(elem) {
            if (elem.value == "otra")
                document.getElementById('hidden_div3').style.display = "block";
            else
                document.getElementById('hidden_div3').style.display = "none";
        }
    </script>

    <script type="text/javascript">

        valueold = "";

        function search_code(value) {
            if (value.length == 5) {
                if (valueold != value) {
                    changeZipCode1();
                }
            }
        }

        var verifzipcode = true;
        function changeZipCode1() {

            var zipcode = $('#txtZipcode1').val();

            if (verifzipcode) {
                verifzipcode = false
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("ValidateZipCodeAjax", "AntBoxAddresses")',
                    data: { zipCode: zipcode },
                    success: function (result) {
                        if (result.success == false) {
                            if (!$('.error-zipcode').length) {
                                $('#zipCodeError').prepend(
                                    '<div class="alert alert-warning" id="zipCodeError"><p class="error-zipcode"><i class="fa fa-exclamation-triangle"></i> <strong>Prueba con otro código postal.</strong> Por el momento nuestro servicio no llega a este domicilio pero te mantendremos informado de las próximas zonas de cobertura.</p></div>'
                                );
                            }
                            verifzipcode = true;
                        }
                        else {
                            $('#zipCodeError').html('');

                            $.ajax({
                                url: '@Url.Action("GetDelegation", "Home")',
                                type: "POST",
                                data: { "zipcode": zipcode },
                                success: function (data) {

                                    $("#cmbDelegations1").html("");
                                    var items = '<option value="">Seleccciona una delegacion</option>';
                                    $.each(data.result, function (i, delegation) {
                                        items += "<option value='" + delegation.Value + "'>" + delegation.Text + "</option>";
                                    });
                                    $('#cmbDelegations1').html(items);
                                    $('#cmbDelegations1').trigger("chosen:updated");

                                    $.ajax({
                                        url: '@Url.Action("GetColonias", "Home")',
                                        type: "POST",
                                        data: { "zipcode": zipcode },
                                        success: function (data) {

                                            $("#cmbNeighborhood1").html("");
                                            var items = '<option value="">Seleccciona una colonia</option>';
                                            $.each(data.result, function (i, delegation) {
                                                items += "<option value='" + delegation.Value + "'>" + delegation.Text + "</option>";
                                            });
                                            $('#cmbNeighborhood1').html(items);
                                            $('#cmbNeighborhood1').trigger("chosen:updated");

                                            $.ajax({
                                                url: '@Url.Action("GetState", "Home")',
                                                type: "POST",
                                                data: { "zipcode": zipcode },
                                                success: function (data) {
                                                    if (data.result == "Ciudad de México")
                                                        $('#State').val("DF");
                                                    else
                                                        $('#State').val(data.result);
                                                    $('#City').val(data.result);
                                                    $('#Country').val('México');

                                                    verifzipcode = true;
                                                }, error: function (dataerror) {
                                                    verifzipcode = true;
                                                }
                                            });
                                        }, error: function (dataerror) {
                                            verifzipcode = true;
                                        }
                                    });
                                }, error: function (dataerror) {
                                    verifzipcode = true;
                                }
                            });
                        }
                    }
                });
            }

        }
        
        function CambioZipModal() {
            var zipcode = $('#txtZipcode1').val();
            //alert(zipcode);

            $.ajax({
                url: '@Url.Action("GetDelegation", "Home")',
                type: "POST",
                data: { "zipcode": zipcode },
                success: function (data) {

                    $("#cmbDelegations1").html("");
                    var items = '<option>Seleccciona una delegacion</option>';
                    $.each(data.result, function (i, delegation) {
                        items += "<option value='" + delegation.Value + "'>" + delegation.Text + "</option>";
                    });
                    $('#cmbDelegations1').html(items);
                    $('#cmbDelegations1').trigger("chosen:updated");
                }
            });

            $.ajax({
                url: '@Url.Action("GetColonias", "Home")',
                type: "POST",
                data: { "zipcode": zipcode },
                success: function (data) {

                    $("#cmbNeighborhood1").html("");
                    var items = '<option>Seleccciona una colonia</option>';
                    $.each(data.result, function (i, delegation) {
                        items += "<option value='" + delegation.Value + "'>" + delegation.Text + "</option>";
                    });
                    $('#cmbNeighborhood1').html(items);
                    $('#cmbNeighborhood1').trigger("chosen:updated");
                }

            });

            $.ajax({
                url: '@Url.Action("GetState", "Home")',
                type: "POST",
                data: { "zipcode": zipcode },
                success: function (data) {
                    $('#State').val(data.result);
                    $('#City').val(data.result);
                    $('#Country').val('México');
                }
            });

        }



 </script>

<script type="text/javascript">
    $('#btnCreateAddress').click(function () {
        // alert('Entro la acción');
        if (($('#form-address').valid()))
        {

            var formData = $("#form-address").serialize();

            //Validar direccion
            showLoad(1);
            $.ajax({
                type: 'POST',
                dataType: 'text',
                url: '@Url.Action("ValidateAddress", "Home")',
                data: formData,
                success: function (data) {
                    console.log(data);
                    if (data == "true") {
                        crearDireccion();
                    } else {
                        showLoad(0);
                        if (!$("#AddressFail").length) {
                            $('#form-address').prepend(
                                '<div class="alert alert-warning" role="alert" id="AddressFail"> La direccion no es valida</div>');
                            window.setTimeout(function () {
                                $("#AddressFail").remove();
                            }, 5000);
                        }
                    }
                }, error: function (error) {
                    showLoad(0);
                    console.log(error)
                }
            });
        }
        
    });

    function crearDireccion()
    {
        $.ajax({
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            type: 'POST',
            url: '@Url.Action("CreateAddress", "Home")',
            // data: $('#frmNewAddress').serialize(),
            data: JSON.stringify({
                "Alias": $("#Alias").val(),
                "Street": $("#Street").val(),
                "Internal_number": $("#Internal_number").val(),
                "External_number": $("#External_number1").val(),
                "Zipcode": $("#txtZipcode1").val(),
                "Delegation": $("#cmbDelegations1").val(),
                "Neighborhood": $("#cmbNeighborhood1").val(),
                "City": $("#City").val(),
                "State": $("#State").val(),
                "Country": $("#Country").val(),
                "References": $("#References").val()
            }),
            success: function (result) {
                if (result.success == false) {
                    $('#nueva_direccion').prepend(
                    '<div class="alert alert-warning" role="alert" id="addressError">Error al registrar dirección, intentelo de nuevo.</div>');
                    window.setTimeout(function ()
                    { $("#addressError").alert('close'); }, 2000);

                }
                else {
                    $('#login-info').html(result);
                    $('#nueva_direccion').prepend(
                   '<div class="alert alert-success" role="alert" id="addressError">Dirección registrada.</div>');
                    window.setTimeout(function ()
                    { $("#addressError").alert('close'); }, 2000);

                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("ListAddresses", "AntBoxAddresses")',
                        success: function (result) {
                            if (result.success == false) {
                             
                                showLoad(0);

                            }
                            else {
                                showLoad(0);
                                cadhtml = "";
                                for (var i = 0; i < result.Addresses.length; i++) {
                                    cadhtml += "<option value='" + result.Addresses[i].Id + "'>" + result.Addresses[i].Alias + "</option>";
                                }
                                $('#AddressPickup').html(cadhtml);
                                $('#AddressPickup').trigger("chosen:updated");
                                $('#nueva_direccion').modal('hide');
                            }
                        },
                        error: function (emp) {
                            showLoad(0);
                            $('#newCardResult').prepend(
                                '<div class="alert alert-error alert-dismissible fade in" id="GetCardsError"> <button type="button" class="close" data-dismiss="alert"> <i class="fa fa-times"></i></button><p><i class="fa fa-exclamation-triangle"></i>' + '[ERROR ' + response.status + '] al traer los datos de las tarjetas, intente refrescar la pagina.</p></div>');
                            window.setTimeout(function ()
                            { $("#GetCardsError").alert('close'); }, 10000);

                        }
                    });
                }
            },
            error: function (emp) {
                showLoad(0);
                $('#frmNewAddress').prepend(
                    '<div class="alert alert-danger fade-in" role="alert" id="LoginErrorAlert">Error al registrar dirección, intentelo de nuevo.</div>'
                    );
                window.setTimeout(function ()
                { $("#LoginErrorAlert").alert('close'); }, 2000);

            }
        });
    }

	function showOtraColonia1(elem){
	    if(elem.value == "otra")
	    document.getElementById('hidden_div1').style.display = "block";
	    else
	    document.getElementById('hidden_div1').style.display = "none";
	}

	function generate_token() {
	    if ($('.form-card').valid()) {
	        showLoad(1);
	        OpenPay.setId('miqwkvkewii1gqs4ifh2');
	        OpenPay.setApiKey('pk_e70b7a22c6c04239b10b7be3596a1f98');
	        OpenPay.setSandboxMode(true);

	        var deviceSessionId = OpenPay.deviceData.setup("payment-form", "deviceIdHiddenFieldName", true);

	        var sucess_callbak = function (response) {
	            var token_id = response.data.id;

	            var state = 'inactive';
	            var count = parseInt($('#cardscount').val());
	            if (count == 0) state = 'main';

	            $.ajax({
	                type: 'POST',
	                url: '@Url.Action("RegisterCardAjax", "Payment")',
	                data: { deviceId: deviceSessionId, state: state, token: token_id },
	                success: function (result) {

	                    if (result.success == true) {
	                        $('#card-number').val("")
	                        $('#card-holder-name').val("")
	                        $('#card-exp-year').val("")
	                        $('#card-exp-month').val("")
	                        $('#card-cvv').val("")

	                        $('#newCardResult').prepend(
                                '<div class="alert alert-success alert-dismissible fade in" id="RegisterCardSuccess"> <button type="button" class="close" data-dismiss="alert"> <i class="fa fa-times"></i></button><p><i class="fa fa-check"></i>Tarjeta registrada</p></div>');
	                        window.setTimeout(function ()
	                        { $("#RegisterCardSuccess").alert('close'); }, 10000);
	                        window.setTimeout(function () {
	                            $.ajax({
	                                type: 'POST',
	                                url: '@Url.Action("GetCardsAjaxJson", "Payment")',
	                                data: { deviceId: deviceSessionId, state: "inactive", token: token_id },
	                                success: function (result) {
	                                    if (result.success == false) {
	                                        
	                                        showLoad(0);

	                                    }
	                                    else {
	                                        showLoad(0);
	                                        cadhtml = "";
	                                        for (var i = 0; i < result.cards.length; i++) {
	                                            cadhtml += "<option value='" + result.cards[i].Id + "'>" + result.cards[i].Info.Card_number + "</option>";
	                                        }
	                                        $('#CardsList').html(cadhtml);
	                                        $('#CardsList').trigger("chosen:updated");
	                                        $('#nueva_tarjeta').modal('hide');
	                                    }
	                                },
	                                error: function (emp) {
	                                    showLoad(0);
	                                    $('#newCardResult').prepend(
                                            '<div class="alert alert-error alert-dismissible fade in" id="GetCardsError"> <button type="button" class="close" data-dismiss="alert"> <i class="fa fa-times"></i></button><p><i class="fa fa-exclamation-triangle"></i>' + '[ERROR ' + response.status + '] al traer los datos de las tarjetas, intente refrescar la pagina.</p></div>');
	                                    window.setTimeout(function ()
	                                    { $("#GetCardsError").alert('close'); }, 10000);

	                                }
	                            });
	                        }, 1000);
	                    }
	                    else {
	                        showLoad(0);
	                        $('#newCardResult').prepend(
                            '<div class="alert alert-error alert-dismissible fade in" id="RegisterCardError"> <button type="button" class="close" data-dismiss="alert"> <i class="fa fa-times"></i></button><p><i class="fa fa-exclamation-triangle"></i>' + 'ERROR al traer los datos de las tarjetas, intente refrescar la pagina.</p></div>');
	                        window.setTimeout(function ()
	                        { $("#RegisterCardError").alert('close'); }, 10000);
	                    }
	                },
	                error: function (emp) {
	                    showLoad(0);
	                    $('#newCardResult').prepend(
                            '<div class="alert alert-error alert-dismissible fade in" id="RegisterCardError"> <button type="button" class="close" data-dismiss="alert"> <i class="fa fa-times"></i></button><p><i class="fa fa-exclamation-triangle"></i>' + '[ERROR ' + response.status + '] al intentar registrar la tarjeta en Antbox.</p></div>');
	                    window.setTimeout(function ()
	                    { $("#RegisterCardError").alert('close'); }, 10000);

	                }
	            });
	            //$('#token_id').val(token_id);
	            //$('#deviceSessionId').val(deviceSessionId);
	        };

	        var error_callbak = function (response) {
	            showLoad(0);
	            var desc = "ERROR [" + response.status + "] " + response.data.description != undefined ? response.data.description : response.message;
	            //alert("ERROR [" + response.status + "] " + desc);
	            //$("#pay-button").prop("disabled", false);
	            switch (response.status) {
	                case 2001:
	                    desc = "La cuenta de banco con esta CLABE ya se encuentra registrada en el cliente.";
	                    break;
	                case 2002:
	                    desc = "La tarjeta con este número ya se encuentra registrada en el cliente.";
	                    break;
	                case 2003:
	                    desc = "El cliente con este identificador externo (External ID) ya existe.";
	                    break;
	                case 2004:
	                    desc = "El dígito verificador del número de tarjeta es inválido de acuerdo al algoritmo Luhn.";
	                    break;
	                case 2005:
	                    desc = "La fecha de expiración de la tarjeta es anterior a la fecha actual.";
	                    break;
	                case 2006:
	                    desc = "El código de seguridad de la tarjeta (CVV2) no fue proporcionado.";
	                    break;
	                case 2007:
	                    desc = "El número de tarjeta es de prueba, solamente puede usarse en Sandbox.";
	                    break;
	                case 2008:
	                    desc = "La tarjeta no es valida para puntos Santander.";
	                    break;
	                case 3001:
	                    desc = "La tarjeta fue declinada.";
	                    break;
	                case 3002:
	                    desc = "La tarjeta ha expirado.";
	                    break;
	                case 3003:
	                    desc = "La tarjeta no tiene fondos suficientes.";
	                    break;
	                case 3004:
	                    desc = "La tarjeta ha sido identificada como una tarjeta robada.";
	                    break;
	                case 3005:
	                    desc = "La tarjeta ha sido rechazada por el sistema antifraudes.";
	                    break;
	                case 3006:
	                    desc = "La operación no esta permitida para este cliente o esta transacción.";
	                    break;
	                case 3007:
	                    desc = "Deprecado. La tarjeta fue declinada.";
	                    break;
	                case 3008:
	                    desc = "La tarjeta no es soportada en transacciones en línea.";
	                    break;
	                case 3009:
	                    desc = "La tarjeta fue reportada como perdida.";
	                    break;
	                case 3010:
	                    desc = "El banco ha restringido la tarjeta.";
	                    break;
	                case 3011:
	                    desc = "El banco ha solicitado que la tarjeta sea retenida. Contacte al banco.";
	                    break;
	                case 3012:
	                    desc = "Se requiere solicitar al banco autorización para realizar este pago.";
	                    break;
	            }

	            $('#newCardResult').prepend(
                    '<div class="alert alert-error alert-dismissible fade in" id="LoginFailAlert"> <button type="button" class="close" data-dismiss="alert"> <i class="fa fa-times"></i></button><p><i class="fa fa-exclamation-triangle"></i>' + desc + '</p></div>');
	            window.setTimeout(function ()
	            { $("#LoginFailAlert").alert('close'); }, 100000);
	        };

	        OpenPay.token.create({
	            "card_number": $('#card-number').val(),
	            "holder_name": $('#card-holder-name').val(),
	            "expiration_year": $('#card-exp-year').val(),
	            "expiration_month": $('#card-exp-month').val(),
	            "cvv2": $('#card-cvv').val()
	        }, sucess_callbak, error_callbak);
	    }
	};
</script>


    @*<script type="text/javascript">
        $('#recoleccion').datepicker().on('changeDate', function (ev) {
            $('#fecha_recoleccion').change();
        });
        $('#fecha_recoleccion').val('0000-00-00');
        $('#fecha_recoleccion').change(function () {
            console.log($('#fecha_recoleccion').val());
        });

    </script>*@





}
