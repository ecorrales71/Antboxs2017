@model  AntBoxFrontEnd.Models.AntBoxAddressViewModel

@{
    ViewBag.Title = "Index";
    ViewData.Model = new AntBoxFrontEnd.Models.AntBoxAddressViewModel();
    ViewData.Model.Colonias = new List<SelectListItem>() { new SelectListItem { Text = "Selecciona un código postal"} };
    ViewData.Model.Delegaciones = new List<SelectListItem>() { new SelectListItem { Text = "Selecciona un código postal" } };
 }

<!-- WRAPPER -->
<div class="wrapper">
    <!-- CONTENT -->
    <div class="content direcciones">
        <!-- CONTAINER -->
        <div class="container">
            <div class="row irow-xs">
                <div class="col-sm-12">
                    <h1>Direcciones</h1>
                    <div class="heading-divider"></div>
                </div>
            </div>
        </div>
        <!-- /.container -->
        <!-- CONTAINER -->
        <div class="container mt30">
            <div class="row">
                <div class="col-md-3 pr0 no_portrait">
                    @Html.Partial("_LeftMenu")
                </div>
                <div class="col-md-9">
                    <div class="row pl30 pr30">
                        <div class="irow-xs pb30">
                            <h3>Direcciones registradas</h3>
                            <p>Registra tus direcciones para la recolección y entregas de tus Antboxs.</p>
                            <div class="alert alert-warning alert-dismissible fade in">
                                <button type="button" class="close" data-dismiss="alert">
                                    <i class="fa fa-times"></i>
                                </button>
                                <p><i class="fa fa-exclamation-triangle"></i> <strong>Regístra una dirección como mínimo.</strong><br />Recuerda que para realizar cualquier orden que realices deberás tener por lo menos una dirección registrada.</p>
                            </div>
                        </div>

                        <div id="loader" role="alert">
                            <img src="@Url.Content("~/Images/preloader.gif")" />   Cargando direcciones... &nbsp;
                        </div>

                        <div id="tblDirecciones">
                          @* ----------------------------------------------------------------------------------------------------------- *@
                            

                        </div>
                   
                    <div class="row mt20">
                        <div class="col-sm-12">
                            <hr id="registrar_nueva_direccion" class="hr-dashed mt40 mb0" />
                        </div>
                    </div>
                    <div class="row pl30 pr30">
                        <div class="irow-xs pb30">
                            <h3>Regístra una nueva dirección</h3>
                            <p>Registra una dirección para después utilizarla como dirección de recolección, de entrega o facturación. Asígnale un nombre para identificarla fácilmente más adelante.</p>
                        </div>
                        <form action="" method="post" class="contact-form form-solid" novalidate id="frmNewAddress">
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Alias)
                                        @Html.TextBoxFor(m => m.Alias, Model.Alias, new { @id = "NAlias" })
                                        @Html.ValidationMessageFor(m => m.Alias)
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Street)
                                        @Html.TextBoxFor(m => m.Street, Model.Street, new { @id = "NStreet", @maxlength = "250" })
                                        @Html.ValidationMessageFor(m => m.Street)
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.External_number)
                                                @Html.TextBoxFor(m => m.External_number, Model.External_number, new { @id = "NExternal_number", @maxlength = "50" })
                                                @Html.ValidationMessageFor(m => m.External_number)
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Internal_number)
                                                @Html.TextBoxFor(m => m.Internal_number, Model.Internal_number, new { @id = "NInternal_number", @maxlength = "50" })
                                                @Html.ValidationMessageFor(m => m.Internal_number)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Zipcode)
                                        @Html.TextBoxFor(m => m.Zipcode, new { @id = "NZipcode", @onchange = "validateZipCode(true)" })
                                        @Html.ValidationMessageFor(m => m.Zipcode)
                                    </div>
                                    <div id="zipCodeError"></div>
                                    <div class="form-group">
                                        <label for="form-select">Delegación o Municipio</label>
                                        @Html.DropDownListFor(m => m.Delegation, Model.Delegaciones, "", new { @id = "NcmbDelegations1" })
                                    </div>
                                    <div class="form-group">
                                        <label for="form-select">Colonia</label>
                                        @Html.DropDownListFor(m => m.Neighborhood, Model.Colonias, "", new { @id = "NcmbNeighborhood1" })
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.City)
                                        @Html.TextBoxFor(m => m.City, new { @id = "NCity", @maxlength = "100", @readonly = "true" })
                                        @Html.ValidationMessageFor(m => m.City)
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.State)
                                        @Html.TextBoxFor(m => m.State, Model.State, new { @id = "NState", @maxlength = "100", @readonly = "true" })
                                        @Html.ValidationMessageFor(m => m.State)
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Country)
                                        @Html.TextBoxFor(m => m.Country, Model.Country, new { @id = "NCountry", @maxlength = "100", @readonly = "true" })
                                        @Html.ValidationMessageFor(m => m.Country)
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.References)
                                        @Html.TextAreaFor(m => m.References, new { @id = "NReferences" })
                                        @Html.ValidationMessageFor(m => m.References)
                                    </div>
                                </div>
                                <div class="col-sm-12 mt10">
                                    <input type="button" class="btn btn-primary btn-wide pull-right" value="Guardar" id="btnCreateAddress">
                                    <p class="succs-msg">Мensaje enviado</p>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <!-- /.container -->
    </div>
    <!-- /.content -->
</div>
<!-- /.wrapper -->

<!-- Modal Medium -->
<div class="modal fade" id="editar_direccion"  >
    <div class="modal-dialog modal-md">       
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times"></i></button>
                <h6 class="modal-title">Editar dirección</h6>
            </div>
            <div class="modal-body">
                <form action="" method="post" class="contact-form form-solid" novalidate id="updateForm">
                    @Html.Hidden("id", "", new { @class = "hiddenid"  })
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(m => m.Alias)
                                @Html.TextBoxFor(m => m.Alias, Model.Alias, new { @id = "Alias" })
                                @Html.ValidationMessageFor(m => m.Alias)
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Street)
                                @Html.TextBoxFor(m => m.Street, Model.Street, new { @id = "Street", @maxlength = "250" })
                                @Html.ValidationMessageFor(m => m.Street)
                            </div>
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.External_number)
                                        @Html.TextBoxFor(m => m.External_number, Model.External_number, new { @id = "External_number", @maxlength = "50" })
                                        @Html.ValidationMessageFor(m => m.External_number)
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Internal_number)
                                        @Html.TextBoxFor(m => m.Internal_number, Model.Internal_number, new { @id = "Internal_number", @maxlength = "50" })
                                        @Html.ValidationMessageFor(m => m.Internal_number)
                                    </div>
                                </div>
                                
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Zipcode)
                                @*<input type="text" name="email" id="txtZipcode1">*@
                                @Html.TextBoxFor(m => m.Zipcode, new { @id = "txtZipcode1", @onchange = "validateZipCode(false)" })
                                @Html.ValidationMessageFor(m => m.Zipcode)
                            </div>
                            <div id="zipCodeErrorModal"></div>
                            <div class="form-group">
                                <label for="form-select">Delegación o Municipio</label>
                                @Html.DropDownListFor(m => m.Delegation, Model.Delegaciones,"", new { @id = "cmbDelegations1" })
                                @*<select id="delegation">
                                    <option value="">- Selecciona una opción -</option>
                                </select>*@
                            </div>
                            <div class="form-group">
                                <label for="form-select">Colonia</label>
                                @Html.DropDownListFor(m => m.Neighborhood, Model.Colonias,"", new { @id = "cmbNeighborhood1" })
                                @*<select id="neighborhood" name="form_select">
                                    <option value="">- Selecciona una opción -</option>
                                </select>*@
                            </div>
                        </div>
                        <div class="col-sm-6 pl0_modal">
                            <div class="form-group">
                                @Html.LabelFor(m => m.City)
                                @Html.TextBoxFor(m => m.City, new { @id = "City", @maxlength = "100", @readonly = "true" })
                                @Html.ValidationMessageFor(m => m.City)
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.State)
                                @Html.TextBoxFor(m => m.State, Model.State, new { @id = "State", @maxlength = "100", @readonly = "true" })
                                @Html.ValidationMessageFor(m => m.State)
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Country)
                                @Html.TextBoxFor(m => m.Country, Model.Country, new { @id = "Country", @maxlength = "100", @readonly = "true" })
                                @Html.ValidationMessageFor(m => m.Country)
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.References)
                                @Html.TextAreaFor(m => m.References, new { @id = "References" })
                                @Html.ValidationMessageFor(m => m.References)
                            </div>
                        </div>
                        <div class="col-sm-12 mt10">

                            <input type="button" class="btn btn-primary btn-wide pull-right" value="Guardar" id="btnUpdateAddress">
                            <p class="succs-msg">Мensaje enviado</p>
                        </div>
                    </div>
                </form>

            </div>
        </div>
    </div>
</div>
<!-- /.modal -->

@section scripts {
    <script type="text/javascript">
    $(function () {
        //Validar letras numeros y signos de puntuacion
        $('#Street, #NStreet').keypress(function (e) {
            var txt = String.fromCharCode(e.which);
            if (!txt.match(/[A-Za-z0-9ñÑáéíóúÁÉÍÓÚ\s\-_&,'.]/)) {
                return false;
            }
        });
        //Validar letras numeros, signos de puntuacion y /
        $('#Internal_number, #NInternal_number, #External_number, #NExternal_number').keypress(function (e) {
            var txt = String.fromCharCode(e.which);
            if (!txt.match(/[A-Za-z0-9ñÑáéíóúÁÉÍÓÚ\/\s\-_&,'.]/)) {
                return false;
            }
        });
        //Validar letras numeros y punto
        $('#City, #NCity, #State, #NState #Country #NCountry').keypress(function (e) {
            var txt = String.fromCharCode(e.which);
            if (!txt.match(/[A-Za-z0-9ñÑáéíóúÁÉÍÓÚ.]/)) {
                return false;
            }
        });

        $('#frmNewAddress').validate({
            rules: {
                Street: {
                    required: true
                },
                "External_number": {
                    required: true
                },
                Zipcode: {
                    valueNotEquals: "",
                    required: true
                },
                Delegation: {
                    valueNotEquals: "",
                    required: true
                },
                Neighborhood: {
                    valueNotEquals: "",
                    required: true
                },
                "Fecha_recoleccion": {
                    required: true
                },
                Horario: {
                    valueNotEquals: "",
                    required: true
                }
            },
            highlight: function (element) {
                $(element).closest('.form-group').addClass('has-error');
            },
            unhighlight: function (element) {
                $(element).closest('.form-group').removeClass('has-error');
            },
            errorElement: 'span',
            errorClass: 'help-block',
            errorPlacement: function (error, element) {
                colocaChosen();
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                } else {
                    error.insertAfter(element);
                }
            }
        });
    });
    $('#btnCreateAddress').click(function () {
        // alert('Entro la acción');
        if ($('#frmNewAddress').valid())
        {
            var formData = $("#frmNewAddress").serialize();

            //Validar direccion
            $.ajax({
                type: 'POST',
                dataType: 'text',
                url: '@Url.Action("ValidateAddress", "Home")',
                data: formData,
                success: function (data) {
                    console.log(data);
                    if (data == "true") {
                        crearDireccion();
                    } else {
                        if (!$("#AddressFail").length) {
                            $('#frmNewAddress').prepend(
                                '<div class="alert alert-warning" role="alert" id="AddressFail"><a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a> La direccion no es valida</div>');
                            window.setTimeout(function () {
                                $("#AddressFail").remove();
                            }, 5000);
                        }
                    }
                }, error: function (error) {
                    console.log(error)
                }
            });
        }
        
    });

    function crearDireccion()
    {
        $.ajax({
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            type: 'POST',
            url: '@Url.Action("CreateAddress", "Home")',
            // data: $('#frmNewAddress').serialize(),
            data: JSON.stringify({
                "Alias": $("#NAlias").val(),
                "Street": $("#NStreet").val(),
                "Internal_number": $("#NInternal_number").val(),
                "External_number": $("#NExternal_number").val(),
                "Zipcode": $("#NZipcode").val(),
                "Delegation": $("#NcmbDelegations1").val(),
                "Neighborhood": $("#NcmbNeighborhood1").val(),
                "City": $("#NCity").val(),
                "State": $("#NState").val(),
                "Country": $("#NCountry").val(),
                "References": $("#NReferences").val()
            }),
            success: function (result) {
                if (result.success == false) {
                    $('#frmNewAddress').prepend(
                    '<div class="alert alert-warning" role="alert" id="addressError">Error al registrar dirección, intentelo de nuevo.</div>');
                    window.setTimeout(function ()
                    { $("#addressError").alert('close'); }, 2000);

                }
                else {
                    $('#login-info').html(result);
                    $('#frmNewAddress').prepend(
                   '<div class="alert alert-warning" role="alert" id="addressError">Dirección registrada.</div>');
                    window.setTimeout(function ()
                    { $("#addressError").alert('close'); }, 2000);

                    window.location.reload(true);
                    //$('#frmNewAddress').ready(function () {
                    //    $("input").each(function () {
                    //        $(this).val("");
                    //    });
                    //});
                }
            },
            error: function (emp) {
                $('#frmNewAddress').prepend(
                    '<div class="alert alert-danger fade-in" role="alert" id="LoginErrorAlert">Error al registrar dirección, intentelo de nuevo.</div>'
                    );
                window.setTimeout(function ()
                { $("#LoginErrorAlert").alert('close'); }, 2000);

            }
        });
    }

    function validateZipCode(verif) {
        var zipcode = $('#txtZipcode1').val();
        if (verif) zipcode = $('#NZipcode').val();
        
    }

	function showOtraColonia1(elem){
	if(elem.value == "otra")
	document.getElementById('hidden_div1').style.display = "block";
	else
	document.getElementById('hidden_div1').style.display = "none";
	}
</script>



<script type="text/javascript">
	function showOtraColonia2(elem){
	if(elem.value == "otra")
	document.getElementById('hidden_div2').style.display = "block";
	else
	document.getElementById('hidden_div2').style.display = "none";
	}
</script>



    <script type="text/javascript">
        $(document).ready(function RefrescaLista() {
            listAddreses();

            
            }
        );
    </script>

    <script type="text/javascript">
        function listAddreses() {

            var maxPerPage = 3;
            var pageNum;
            // alert("Entro la funcion");

            pageLoading("true");

            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'GET',
               // url: '/Customer/ListAddresses',
                url: '@Url.Action("ListAddresses", "Home")',
                success: function (data) {
                    if (!data.success) {
                       // alert("Error en la funcion " + data.ErrorMessage);
                    }

                    var limit = maxPerPage;
                    var stage = 1;
                   
                    $("#tblDirecciones").html('');


                    var div3Content = '';

                    for (var i = 0; i < data.length; i++) {
                       // alert(i);
                        div3Content += '<div class="col-sm-12 back_gris pt30 pb20 mb30">';
                        div3Content +=      '<div class="media-left">';
                        div3Content +=            '<div class="icon icon-color icon-size-4">';
                        div3Content +=                '<i class="fa fa-map-marker"></i>';
                        div3Content +=                      '</div>';
                        div3Content +=                  '</div>';
                        div3Content +=                      '<div class="media-body" id="" value="' + data[i].Id + '">';
                        div3Content +=                      '<h4>' + data[i].Alias + '</h4>';
                        div3Content +=                      '<p>' + data[i].Street + ', ';
                                                           
                        if (data[i].Internal_number != '') div3Content += 'Núm. Ext. ' + data[i].External_number + ', ';

                        if (data[i].Internal_number != '') div3Content += 'Núm. Int. ' + data[i].Internal_number + ', ';


                        div3Content +=                              data[i].Neighborhood + ', C.P. ' +
                                                                    data[i].Zipcode + '' +
                                                                    ' <br>Referencias: ' + data[i].References + '</p>';
                        div3Content += '<button type="button"  class="btn btn-primary btn-sm pull-right ml10" data-toggle="modal" data-target="#editar_direccion" id="' + data[i].Id + '"  onclick="EditarEvent(this)" >Editar</button>';
                        div3Content +=                        '<button type="button" class="btn btn-primary btn-sm pull-right btn_blue" onclick="EliminaDireccion(\'' + data[i].Id + '\')">Eliminar</button>';
                        div3Content +=                  '</div>';
                        div3Content +=                  '</div>';


                    }


                    var firts = 1;
                    var last = data.length;
                    var current = $("#PageNum").value;
                    if (current == null) current = 1;

                    $("#tblDirecciones").append(div3Content);

                    pageLoading("false");
                },
               
                fail: function (result) {
                    pageLoading("false");
                  //  alert("error en la funcion ");

                },
                error: function () {
                    pageLoading("false");
                }

            })
            
        }


    </script>

    <script type="text/javascript">

        function EditarEvent(e) {

            var id = e.id;          

            var data = 'id=' + id;            

            $('#id').val(id);

            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'GET',
                url:'@Url.Action("GetAddress", "Home")',
                data: data,
                success: function (data) {

                    $('#Alias').val(data.Alias);
                    $('#Street').val(data.Street);
                    $('#Internal_number').val(data.Internal_number);
                    $('#External_number').val(data.External_number);
                    $('#txtZipcode1').val(data.Zipcode);
                    $('#City').val(data.City);
                    $('#State').val(data.State);
                    $('#Country').val(data.Country);
                    $('#References').val(data.References);                                       

                    CambioZipModal(data);

                },
                error: function () {

                 //   alert("Error al cargar dirección ")
                }
                

            });

        };


    </script>
    
    <script  type="text/javascript">
        function EliminaDireccion(id) {
            var data = 'idAddress=' + id;

            $("#ajaxStart").attr("disabled", true);

            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'GET',
                
                //url: ur,
                url: '@Url.Action("DeleteAdress", "Home")',
                data: data,

                success: function (data) {
                        //alert(data);
                    //recarga la lista de direcciones
                    window.location.reload(true);
                       
                    
                },
                error: function () {
                }
            })
        }


    </script>


    <script type="text/jscript">
        $('#NZipcode').change(function () {

            var zipcode = $('#NZipcode').val();
            //alert(zipcode);

            $.ajax({
                type: 'POST',
                url: '@Url.Action("ValidateZipCodeAjax", "AntBoxAddresses")',
                data: { zipCode: zipcode },
                success: function (result) {
                    if (result.success == false) {
                        if (!$('.error-zipcode').length) {
                            $('#zipCodeError').prepend(
                                '<div class="alert alert-warning" id="zipCodeError"><p class="error-zipcode"><i class="fa fa-exclamation-triangle"></i> <strong>Prueba con otro código postal.</strong> Por el momento nuestro servicio no llega a este domicilio pero te mantendremos informado de las próximas zonas de cobertura.</p></div>'
                            );
                        }
                    }
                    else {
                        $('#zipCodeError').html('');
                        $.ajax({
                            url: '@Url.Action("GetDelegation", "Home")',
                            type: "POST",
                            data: { "zipcode": zipcode },
                            success: function (data) {

                                $("#NcmbDelegations1").html("");
                                var items = '<option>Seleccciona una delegacion</option>';
                                $.each(data.result, function (i, delegation) {
                                    items += "<option value='" + delegation.Value + "'>" + delegation.Text + "</option>";
                                });
                                $('#NcmbDelegations1').html(items);
                                $('#NcmbDelegations1').trigger("chosen:updated");

                            }
                        });

                        $.ajax({
                            url: '@Url.Action("GetColonias", "Home")',
                            type: "POST",
                            data: { "zipcode": zipcode },
                            success: function (data) {

                                $("#NcmbNeighborhood1").html("");
                                var items = '<option>Seleccciona una colonia</option>';
                                $.each(data.result, function (i, delegation) {
                                    items += "<option value='" + delegation.Value + "'>" + delegation.Text + "</option>";
                                });
                                $('#NcmbNeighborhood1').html(items);
                                $('#NcmbNeighborhood1').trigger("chosen:updated");
                            }


                        });

                        $.ajax({
                            url: '@Url.Action("GetState", "Home")',
                            type: "POST",
                            data: { "zipcode": zipcode },
                            success: function (data) {
                                if (data.result == "Ciudad de México")
                                    $('#NState').val("DF");
                                else
                                    $('#NState').val(data.result);
                                $('#NCity').val(data.result);
                                $('#NCountry').val('México');
                            }
                        });
                    }


                },
                error: function (emp) {
                    $('#zipCodeError').html('Error al validar Codigo Postal.');

                }
            });

            


        });

    </script>


    <script type="text/javascript">
        function CambioZipModal(datamodal) {
            var zipcode = $('#txtZipcode1').val();
            //alert(zipcode);

            $.ajax({
                type: 'POST',
                url: '@Url.Action("ValidateZipCodeAjax", "AntBoxAddresses")',
                data: { zipCode: zipcode },
                success: function (result) {
                    if (result.success == false) {
                        if (!$('.error-zipcodemodal').length) {
                            $('#zipCodeErrorModal').prepend(
                                '<div class="alert alert-warning" id="zipCodeErrormodal"><p class="error-zipcodemodal"><i class="fa fa-exclamation-triangle"></i> <strong>Prueba con otro código postal.</strong> Por el momento nuestro servicio no llega a este domicilio pero te mantendremos informado de las próximas zonas de cobertura.</p></div>'
                            );
                        }
                    }
                    else {
                        $('#zipCodeErrorModal').html('');

                        $.ajax({
                            url: '@Url.Action("GetDelegation", "Home")',
                            type: "POST",
                            data: { "zipcode": zipcode },
                            success: function (data) {

                                $("#cmbDelegations1").html("");
                                var items = '<option>Seleccciona una delegacion</option>';
                                var cadhtml = ""; var verifselected = true;
                                $.each(data.result, function (i, delegation) {
                                    cadhtml = "";
                                    if (delegation.Value == datamodal.Delegation && verifselected) {
                                        verifselected = false;
                                        cadhtml = "selected";
                                    }
                                    items += "<option value='" + delegation.Value + "' " + cadhtml + ">" + delegation.Text + "</option>";
                                });
                                $('#cmbDelegations1').html(items);
                                $('#cmbDelegations1').trigger("chosen:updated");
                                $('#cmbDelegations1').val(datamodal.Delegation);
                            }
                        });

                        $.ajax({
                            url: '@Url.Action("GetColonias", "Home")',
                            type: "POST",
                            data: { "zipcode": zipcode },
                            success: function (data) {

                                $("#cmbNeighborhood1").html("");
                                var items = '<option>Seleccciona una colonia</option>';
                                var cadhtml = ""; var verifselected = true;
                                $.each(data.result, function (i, delegation) {
                                    cadhtml = "";
                                    if (delegation.Value == datamodal.Neighborhood && verifselected) {
                                        verifselected = false;
                                        cadhtml = "selected";
                                    }
                                    items += "<option value='" + delegation.Value + "' " + cadhtml + ">" + delegation.Text + "</option>";
                                });
                                $('#cmbNeighborhood1').html(items);
                                $('#cmbNeighborhood1').trigger("chosen:updated");

                                $('#cmbNeighborhood1').val(datamodal.Neighborhood);
                            }


                        });
                    }
                }
            })

        }



    </script>



    <script type="text/jscript">
        //CARGA LOS DATOS DE ESTADO Y COLONIA DEL CÓDIGO POSTAL DE ACTUALIZACIÓN
        $('#txtZipcode1').change(function () {

            var zipcode = $('#txtZipcode1').val();
            //alert(zipcode);

            $.ajax({
                type: 'POST',
                url: '@Url.Action("ValidateZipCodeAjax", "AntBoxAddresses")',
                data: { zipCode: zipcode },
                success: function (result) {
                    if (result.success == false) {
                        if (!$('.error-zipcodemodal').length) {
                            $('#zipCodeErrorModal').prepend(
                                '<div class="alert alert-warning" id="zipCodeErrormodal"><p class="error-zipcodemodal"><i class="fa fa-exclamation-triangle"></i> <strong>Prueba con otro código postal.</strong> Por el momento nuestro servicio no llega a este domicilio pero te mantendremos informado de las próximas zonas de cobertura.</p></div>'
                            );
                        }
                    }
                    else {
                        $('#zipCodeErrorModal').html('');


                        $.ajax({
                            url: '@Url.Action("GetDelegation", "Home")',
                            type: "POST",
                            data: { "zipcode": zipcode },
                            success: function (data) {

                                $("#cmbDelegations1").html("");
                                var items = '<option>Seleccciona una delegacion</option>';
                                $.each(data.result, function (i, delegation) {
                                    items += "<option value='" + delegation.Value + "'>" + delegation.Text + "</option>";
                                });
                                $('#cmbDelegations1').html(items);
                                $('#cmbDelegations1').trigger("chosen:updated");
                            }
                        });

                        $.ajax({
                            url: '@Url.Action("GetColonias", "Home")',
                            type: "POST",
                            data: { "zipcode": zipcode },
                            success: function (data) {

                                $("#cmbNeighborhood1").html("");
                                var items = '<option>Seleccciona una colonia</option>';
                                $.each(data.result, function (i, delegation) {
                                    items += "<option value='" + delegation.Value + "'>" + delegation.Text + "</option>";
                                });
                                $('#cmbNeighborhood1').html(items);
                                $('#cmbNeighborhood1').trigger("chosen:updated");
                            }


                        });

                        $.ajax({
                            url: '@Url.Action("GetState", "Home")',
                            type: "POST",
                            data: { "zipcode": zipcode },
                            success: function (data) {
                                if (data.result == "Ciudad de México")
                                    $('#NState').val("DF");
                                else
                                    $('#NState').val(data.result);
                                $('#City').val(data.result);
                                $('#Country').val('México');
                            }
                        });
                    }
                }
            });

        });

</script>


    <script type="text/javascript">
        $('#btnUpdateAddress').click(function () {
            var formData = $("#updateForm").serialize();

            //Validar direccion
            $.ajax({
                type: 'POST',
                dataType: 'text',
                url: '@Url.Action("ValidateAddress", "Home")',
                data: formData,
                success: function (data) {
                    console.log(data);
                    if (data == "true") {
                        crearDireccion();
                    } else {
                        if (!$("#AddressFail").length) {
                            $('#updateForm').prepend(
                                '<div class="alert alert-warning" role="alert" id="AddressFail"><a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a> La direccion no es valida</div>');
                            window.setTimeout(function () {
                                $("#AddressFail").remove();
                            }, 5000);
                        }
                    }
                }, error: function (error) {
                    console.log(error)
                }
            });
        });

        function actualizarDireccion()
        {
            // alert("Entra evento de acutalización");
            var idAddress = $(".modal-content .hiddenid").val();
            // alert(idAddress);


            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: '@Url.Action("UpdateAddress", "Home")',
                // data: $('#frmNewAddress').serialize(),
                data: JSON.stringify({
                    "Id": idAddress,
                    "Alias": $("#Alias").val(),
                    "Street": $("#Street").val(),
                    "Internal_number": $("#Internal_number").val(),
                    "External_number": $("#External_number").val(),
                    "Zipcode": $("#txtZipcode1").val(),
                    "Delegation": $("#cmbDelegations1").val(),
                    "Neighborhood": $("#cmbNeighborhood1").val(),
                    "City": $("#City").val(),
                    "State": $("#State").val(),
                    "Country": $("#Country").val(),
                    "References": $("#References").val()
                }),
                success: function (result) {
                    if (result.success == false) {
                        $('#updateForm').prepend(
                        '<div class="alert alert-warning" role="alert" id="addressError">Error al actualizar la dirección, intentelo de nuevo.</div>');
                        window.setTimeout(function ()
                        { $("#addressError").alert('close'); }, 2000);

                    }
                    else {
                        $('#updateForm').prepend(
                       '<div class="alert alert-danger fade-in" role="alert" id="LoginErrorAlert">Se ha actualizado la información.</div>'
                       );
                        window.setTimeout(function ()
                        { $("#LoginErrorAlert").alert('close'); }, 2000);

                        $('#modal-container').modal('hide');

                        window.location.reload(true);

                        //listAddreses();

                    }
                },
                error: function (emp) {
                    $('#updateForm').prepend(
                        '<div class="alert alert-danger fade-in" role="alert" id="LoginErrorAlert">Error al actualizar la dirección, intentelo de nuevo.</div>'
                        );
                    window.setTimeout(function ()
                    { $("#LoginErrorAlert").alert('close'); }, 2000);
                }
            });
        }
    </script>


    <script  type="text/javascript">

        function pageLoading(status) {
            if (status == 'true') {
                $("#loader").css('display', 'block');
            }
            else {
                $("#loader").css('display', 'none');
            }
        }

    </script>


    <script type="text/javascript">

        $('.btn-primary').on('click', function (e) {



            //alert(id);

        });
     

    </script>
  

}